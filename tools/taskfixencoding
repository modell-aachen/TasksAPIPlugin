#! /usr/bin/env perl

use strict;
use warnings;

use Getopt::Long;

do '../bin/setlib.cfg';
require Foswiki;
my $session = new Foswiki('admin');

require Foswiki::Func;
require Foswiki::Plugins::TasksAPIPlugin;

use JSON;
use v5.12;

my %cfg = (
  host    => '',
  nodry   => 0,
);

Getopt::Long::GetOptions(
  'host=s'	=> \$cfg{host},
  'nodry'	=> \$cfg{nodry},
);

sub process {
	use Data::Dumper;
	print "Converting task changeset encodings to UTF8...\n";
	my $query = Foswiki::Plugins::TasksAPIPlugin::query();
	unless(defined $query->{tasks}){
		print "No tasks found. No conversion needed.\n";
		return;
	}
	my @tasks = @{$query->{tasks}};
	my @notFixableTasks = ();

	foreach(@tasks){
		my ($web, $topic) = (split /\./, $_->{id});
		my $task;
		eval {
			$task = Foswiki::Plugins::TasksAPIPlugin::Task::load($web, $topic);
		};
		if($@){
			next;
		}
		my $changesets = $task->{meta}->find('TASKCHANGESET');
		foreach($changesets){
			my $changeset = $task->{meta}->get('TASKCHANGESET', $_);
			next unless defined $changeset;
			eval {
				decode_json($changeset->{changes});
			};
			if($@){
				print "Old encoding on:\n";
				print(Dumper($changeset->{changes}));
				eval {
					my $old_changes = from_json($changeset->{changes});
					$changeset->{changes} = encode_json($old_changes);
					print "Converted to:\n";
					print(Dumper($changeset->{changes}));
					$task->{meta}->putKeyed('TASKCHANGESET', $changeset);
				};
				if($@){
					push(@notFixableTasks, $task->{id});
				}
			}
		}
		if($cfg{nodry}){
			$task->{meta}->saveAs($web, $topic, dontlog => 1, minor => 1);
			Foswiki::Plugins::TasksAPIPlugin::_index($task);
		}
	}
	if(@notFixableTasks){
		print "ATTENTION: The encoding of the following tasks could not be fixed.\n";
		print "Please fix them manually.\n";
		print join("\n", @notFixableTasks);
		print "\n";
	}
	else{
		print "All encodings could be fixed.\n"
	}
}

if ($cfg{host}) {
  require Foswiki::Contrib::VirtualHostingContrib::VirtualHost;
  if ($cfg{host} eq 'all'){
  	Foswiki::Contrib::VirtualHostingContrib::VirtualHost->run_on_each(\&process);
  }
  else {
  	Foswiki::Contrib::VirtualHostingContrib::VirtualHost->run_on($cfg{host}, \&process);
  }
} else {
  process();
}

unless($cfg{nodry}){
	print "This was a dry-run. Nothing has been saved.\n";
}
